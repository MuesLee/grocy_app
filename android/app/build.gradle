def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}


def keyStoreFile = rootProject.file('grocy_app.jks')
def keyAliasProp;
def keyPwProp;
def keyStorePwProp;

def localKeyStorePropertiesFile = rootProject.file('localKeystore.properties')
if (localKeyStorePropertiesFile.exists()) {
    def localKeyStoreProperties = new Properties()
    localKeyStorePropertiesFile.withReader('UTF-8') { reader ->
        localKeyStoreProperties.load(reader)
    }
    keyAliasProp = localKeyStoreProperties.getProperty('keyAlias')
    keyPwProp = localKeyStoreProperties.getProperty('keyPw')
    keyStorePwProp = localKeyStoreProperties.getProperty('keyStorePw')
}
else {
    keyAliasProp = System.getenv('KEY_ALIAS')
    keyPwProp = System.getenv('KEY_PASSWORD')
    keyStorePwProp = System.getenv('STORE_PASSWORD')
}

if (!keyStoreFile.exists()) {
    keyStoreFile = file(rootDir.getCanonicalPath() + '/' + 'keystore.jks')
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 28

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        applicationId "org.muesombrus.grocy_app"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            keyAlias keyAliasProp
            keyPassword keyPwProp
            storeFile keyStoreFile
            storePassword keyStorePwProp
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation "androidx.annotation:annotation:1.1.0"
    implementation "androidx.fragment:fragment:1.2.4"
}
